<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 引入字典资源文件 -->
	<context:property-placeholder location="classpath:resource/resource.properties"/>
	<context:component-scan base-package="cn.z.controller" />
	<!-- 加载属性文件 -->
	<mvc:annotation-driven />
	<!--<bean-->
			<!--class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
		<!--<property name="prefix" value="/WEB-INF/html/" />-->
		<!--<property name="suffix" value=".html" />-->
	<!--</bean>-->

	<!-- 注解驱动:
           替我们显示的配置了最新版的注解的处理器映射器和处理器适配器 -->
	<mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>

	<!--这里配了一个视图解析器-->
	<bean
	class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!--<property name="prefix" value="/WEB-INF/jsp/" />-->
	<!--<property name="suffix" value=".jsp" />-->

		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 如果没有显示的配置处理器映射器和处理器适配器，那么springmvc会去默认的dispatcherServlet.properties中查找，
	对应的处理器映射器和处理器适配器去使用，这样每个请求都要去扫描一次他的默认配置文件爱你，效率非常低，会降低访问速度，所以要
	显示的配置处理器映射器和处理器适配器-->
	<!-- 注解形式的处理器映射器-->
	<!--<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"></bean>-->
	<!-- 注解形式的处理器适配器-->
	<!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"></bean>-->

	<!-- 配置最新版的处理器映射器-->
	<!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>-->
	<!-- 配置最新版的注解的处理器适配器-->
	<!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"></bean>-->

	<!--<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">-->
		<!--<property name="exposeRequestAttributes" value="true" />-->
		<!--<property name="exposeSessionAttributes" value="true" />-->
		<!--<property name="viewClass">-->
			<!--<value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>-->
		<!--</property>-->
		<!--<property name="cache">-->
			<!--<value>true</value>-->
		<!--</property>-->
		<!--<property name="suffix">-->
			<!--<value>.html</value>-->
		<!--</property>-->
		<!--<property name="contentType">-->
			<!--<value>text/html; charset=UTF-8</value>-->
		<!--</property>-->
	<!--</bean>-->
	<!-- 资源映射 -->
	<!-- mapping就是你请求哪个资源的url格式，比如你在浏览器里输入/css/**，只要是带这种格式的，就会来到/WEB-INF/css下面-->
	<mvc:resources location="/WEB-INF/css/" mapping="/css/**"/>
	<mvc:resources location="/WEB-INF/js/" mapping="/js/**"/>
	<mvc:resources location="/WEB-INF/html/" mapping="/html/**"/>

	<!-- 配置自定义转换器
	注意: 一定要将自定义的转换器配置到注解驱动上
	-->
	<bean id="conversionService"
		  class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<!-- 指定自定义转换器的全路径名称 -->
				<bean class="cn.z.controller.converter.CustomGlobalStrToDateConverter"/>
			</set>
		</property>
	</bean>
</beans>